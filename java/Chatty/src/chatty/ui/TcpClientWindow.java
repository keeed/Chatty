/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatty.ui;

import chatty.logging.ILogger;
import chatty.network.TcpClient;
import chatty.network.TcpServer;
import java.awt.event.KeyEvent;
import java.time.LocalDateTime;

/**
 *
 * @author Kedren Villena
 */
public class TcpClientWindow extends javax.swing.JFrame implements ILogger {

    private TcpServer server;
    private TcpClient client;

    /**
     * Creates new form TcpClient
     */
    public TcpClientWindow() {
        initComponents();

        textareaChat.getCaret().setVisible(true);
        textareaChat.getCaret().setSelectionVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textfieldServerIpAddress = new javax.swing.JTextField();
        textfieldServerPort = new javax.swing.JTextField();
        buttonStartServer = new javax.swing.JButton();
        buttonStopServer = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textareaChat = new javax.swing.JTextArea();
        buttonSend = new javax.swing.JButton();
        textfieldChatInput = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textfieldClientIpAddress = new javax.swing.JTextField();
        textfieldClientPort = new javax.swing.JTextField();
        buttonClientConnect = new javax.swing.JButton();
        buttonClientDisconnect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tcp Client");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Server"));

        jLabel1.setText("Server IP Address:");

        jLabel2.setText("Server Port:");

        textfieldServerIpAddress.setText("127.0.0.1");

        textfieldServerPort.setText("4500");

        buttonStartServer.setText("Start Server");
        buttonStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartServerActionPerformed(evt);
            }
        });

        buttonStopServer.setText("Stop Server");
        buttonStopServer.setEnabled(false);
        buttonStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStopServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(32, 32, 32)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textfieldServerIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonStartServer)
                    .addComponent(buttonStopServer))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textfieldServerIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonStartServer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textfieldServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonStopServer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Chat"));

        textareaChat.setEditable(false);
        textareaChat.setColumns(20);
        textareaChat.setRows(5);
        jScrollPane1.setViewportView(textareaChat);

        buttonSend.setText("Send");
        buttonSend.setEnabled(false);
        buttonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendActionPerformed(evt);
            }
        });

        textfieldChatInput.setEnabled(false);
        textfieldChatInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textfieldChatInputKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(textfieldChatInput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSend))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldChatInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSend)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Client"));

        jLabel5.setText("Client IP Address:");

        jLabel6.setText("Client Port:");

        textfieldClientIpAddress.setText("127.0.0.1");

        textfieldClientPort.setText("4000");

        buttonClientConnect.setText("Connect");
        buttonClientConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClientConnectActionPerformed(evt);
            }
        });

        buttonClientDisconnect.setText("Disconnect");
        buttonClientDisconnect.setEnabled(false);
        buttonClientDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClientDisconnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(32, 32, 32)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textfieldClientIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfieldClientPort, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonClientDisconnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonClientConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textfieldClientIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonClientConnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textfieldClientPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonClientDisconnect))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartServerActionPerformed
        // TODO add your handling code here:
        Object criticalSection = new Object();
        synchronized (criticalSection) {
            try {
                String ipAddress = textfieldServerIpAddress.getText();
                int port = Integer.parseInt(textfieldServerPort.getText());

                server = new TcpServer(ipAddress, port, this);
                server.Start();

                buttonStartServer.setEnabled(false);
                buttonStopServer.setEnabled(true);
            } catch (NumberFormatException ex) {
                Log("TcpClient UI", ex.getMessage());
            }
        }
    }//GEN-LAST:event_buttonStartServerActionPerformed

    private void buttonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendActionPerformed
        // TODO add your handling code here:
        sendMessage();
    }//GEN-LAST:event_buttonSendActionPerformed

    private void buttonStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopServerActionPerformed
        // TODO add your handling code here:
        Object criticalSection = new Object();
        synchronized (criticalSection) {
            try {
                server.Stop();

                buttonStartServer.setEnabled(true);
                buttonStopServer.setEnabled(false);
            } catch (NumberFormatException ex) {
                Log("TcpClient UI", ex.getMessage());
            }
        }
    }//GEN-LAST:event_buttonStopServerActionPerformed

    private void buttonClientConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClientConnectActionPerformed
        // TODO add your handling code here:
        Object criticalSection = new Object();
        synchronized (criticalSection) {
            try {
                String ipAddress = textfieldServerIpAddress.getText();
                int port = Integer.parseInt(textfieldClientPort.getText());

                client = new TcpClient(ipAddress, port, this);

                if (client.Connect()) {
                    Log("TcpClient", "Connected to " + ipAddress + ":" + port);
                    buttonClientConnect.setEnabled(false);
                    buttonClientDisconnect.setEnabled(true);

                    buttonSend.setEnabled(true);
                    textfieldChatInput.setEnabled(true);
                }
            } catch (NumberFormatException ex) {
                Log("TcpClient UI", ex.getMessage());
            }
        }
    }//GEN-LAST:event_buttonClientConnectActionPerformed

    private void buttonClientDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClientDisconnectActionPerformed
        // TODO add your handling code here:
        Object criticalSection = new Object();
        synchronized (criticalSection) {
            try {
                client.Disconnect();

                buttonClientConnect.setEnabled(true);
                buttonClientDisconnect.setEnabled(false);

                buttonSend.setEnabled(false);
                textfieldChatInput.setEnabled(false);
            } catch (NumberFormatException ex) {
                Log("TcpClient UI", ex.getMessage());
            }
        }
    }//GEN-LAST:event_buttonClientDisconnectActionPerformed

    private void textfieldChatInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldChatInputKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sendMessage();
        }
    }//GEN-LAST:event_textfieldChatInputKeyReleased

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        try {
            server.Stop();
            client.Disconnect();
        } catch (Exception ex) {
            // Ignore exception
        }
    }//GEN-LAST:event_formWindowClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClientConnect;
    private javax.swing.JButton buttonClientDisconnect;
    private javax.swing.JButton buttonSend;
    private javax.swing.JButton buttonStartServer;
    private javax.swing.JButton buttonStopServer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textareaChat;
    private javax.swing.JTextField textfieldChatInput;
    private javax.swing.JTextField textfieldClientIpAddress;
    private javax.swing.JTextField textfieldClientPort;
    private javax.swing.JTextField textfieldServerIpAddress;
    private javax.swing.JTextField textfieldServerPort;
    // End of variables declaration//GEN-END:variables

    @Override
    public void Log(String sender, String message) {
        textareaChat.append("[" + LocalDateTime.now().toString() + "] - " + sender + " - " + message + System.lineSeparator());
        textareaChat.setCaretPosition(textareaChat.getDocument().getLength());
    }

    private void sendMessage() {
        if (client.SendMessage(textfieldChatInput.getText())) {
            textfieldChatInput.setText("");
            // In case that we want to log something when we have successfulyl sent a message.
        } else {
            buttonClientConnect.setEnabled(true);
            buttonClientDisconnect.setEnabled(false);

            buttonSend.setEnabled(false);
            textfieldChatInput.setEnabled(false);
        }
    }
}
